#!/usr/bin/python

import os
import sys
import subprocess

from envs import *

envs['script_name'] = __file__.split(os.sep)[-1]
envs['script_name'] = remove_py(envs['script_name'])
envs['MAYA_MODULE_PATH'] = getEnv('MAYA_MODULE_PATH', '')
for path in ('MTOA_ROOT',
             'YETI_ROOT',
             'RMAN_ROOT',
             'ORNATRIX_ROOT',
             # 'GOLAEM_ROOT',  # commented out for compatiblity reasons
             'WALTER_MAYA_ROOT'):
    envs['MAYA_MODULE_PATH'] += ":{}".format(envs[path])

MTOA_VERSION_SPLIT = None
if envs['MTOA_VERSION'][0].isdigit():
    MTOA_VERSION_SPLIT = [int(i) for i in envs['MTOA_VERSION'].split('.')[:3]]

DEV = envs['MTOA_VERSION'] == 'dev'

envs['ARNOLD_PLUGIN_PATH'] = getEnv('ARNOLD_PLUGIN_PATH', '')

if MTOA_VERSION_SPLIT and not (MTOA_VERSION_SPLIT[0] >= 3
                               and MTOA_VERSION_SPLIT[1] >= 0):
    envs['ARNOLD_PLUGIN_PATH'] += ":{ALSHADERS_ROOT}/bin"
envs['ARNOLD_PLUGIN_PATH'] += ":{ALSHADERS_LEGACY_ROOT}/bin"
envs['ARNOLD_PLUGIN_PATH'] += ":{YETI_ROOT}/bin/pgYetiArnold.so"
envs['ARNOLD_PLUGIN_PATH'] += ":{JSNOISE_ROOT}/bin"
envs['ARNOLD_PLUGIN_PATH'] += ":{WALTER_ROOT}/arnold"

envs['MTOA_TEMPLATES_PATH'] = getEnv("MTOA_TEMPLATES_PATH", '')
envs['MTOA_TEMPLATES_PATH'] += ":{ALSHADERS_ROOT}/ae"
envs['MTOA_TEMPLATES_PATH'] += ":{ALSHADERS_LEGACY_ROOT}/ae"
envs['MTOA_TEMPLATES_PATH'] += ":{JSNOISE_ROOT}/ae"

envs['MAYA_CUSTOM_TEMPLATE_PATH'] = getEnv('MAYA_CUSTOM_TEMPLATE_PATH', '')
envs['MAYA_CUSTOM_TEMPLATE_PATH'] += ":{ALSHADERS_ROOT}/aexml"
envs['MAYA_CUSTOM_TEMPLATE_PATH'] += ":{ALSHADERS_LEGACY_ROOT}/aexml"

envs['PYTHONHOME'] = envs['MAYA_ROOT']  # for gdb to work

for e, v in envs.items():
    os.environ[e] = v.format(**envs)

s = '*'*30

print '{}\nMAYA_MODULE_PATH'.format(s)
print '\n'.join(envs['MAYA_MODULE_PATH'].format(**envs).split(':'))
print '{}\nARNOLD_PLUGIN_PATH'.format(s)
print '\n'.join(envs['ARNOLD_PLUGIN_PATH'].format(**envs).split(':'))
print '{}\n'.format(s)

args = sys.argv[1:]
maya_exe = "/usr/autodesk/maya{MAYA_VERSION}/bin/{script_name}".format(**envs)
print '\nRUNNING command: "{}"'.format(' '.join([maya_exe] + args))
exitstatus = subprocess.call([maya_exe] + args)
print "\nMaya exited with status: {}".format(exitstatus)
sys.exit(exitstatus)
